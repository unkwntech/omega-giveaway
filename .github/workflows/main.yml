name: CI - Master

on:
    push:
        branches: [main]

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
            #   - name: Run Tests
            #     run: |
            - name: Set up SSH
              run: |
                  mkdir -p ~/.ssh/
                  echo "$SSH_PRIVATE_KEY" > ./deploy.key
                  chmod 600 ./deploy.key
                  echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
              shell: bash
              env:
                  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
                  SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
            - name: Create env file
              run: |
                  cp sample.env .env
                  sed -i -e "s/\%ESI_CLIENTID/$ESI_CLIENTID/g" .env
                  sed -i -e "s/\%ESI_SECRET/$ESI_SECRET/g" .env
                  sed -i -e "s/\%JWT_SECRET/$JWT_SECRET/g" .env
                  sed -i -e "s/\%SSL_PKEY/$SSL_PKEY/g" .env
                  sed -i -e "s/\%SSL_CERT/$SSL_CERT/g" .env
              env:
                  ESI_SECRET: ${{secrets.ESI_SECRET}}
                  ESI_CLIENTID: ${{secrets.ESI_CLIENTID}}
                  JWT_SECRET: ${{secrets.JWT_SECRET}}
                  SSL_PKEY: ${{secrets.SSL_PKEY}}
                  SSL_CERT: ${{secrets.SSL_CERT}}
            - name: Install PM2
              run: |
                  npm i pm2

            - name: Deploy
              run: |
                  git stash
                  scp -i deploy.key .env github@$DEPLOY_TARGET"source/"
                  ./node_modules/pm2/bin/pm2 deploy ecosystem.config.js production
              env:
                  DEPLOY_TARGET: ${{secrets.DEPLOY_TARGET}}

              # Or alternately, put this deploy script in your package.json's scripts and run it using yarn/npm:
              # run: yarn deploy
